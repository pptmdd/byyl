// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | AND
  | OR
  | XOR
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | UNTIL
  | DO
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_XOR
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_UNTIL
    | TOKEN_DO
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | NOT  -> 11 
  | SEQOR  -> 12 
  | SEQAND  -> 13 
  | EQ  -> 14 
  | NE  -> 15 
  | GT  -> 16 
  | LT  -> 17 
  | GE  -> 18 
  | LE  -> 19 
  | PLUS  -> 20 
  | MINUS  -> 21 
  | TIMES  -> 22 
  | DIV  -> 23 
  | MOD  -> 24 
  | AND  -> 25 
  | OR  -> 26 
  | XOR  -> 27 
  | CHAR  -> 28 
  | ELSE  -> 29 
  | IF  -> 30 
  | INT  -> 31 
  | NULL  -> 32 
  | PRINT  -> 33 
  | PRINTLN  -> 34 
  | RETURN  -> 35 
  | VOID  -> 36 
  | WHILE  -> 37 
  | FOR  -> 38 
  | UNTIL  -> 39 
  | DO  -> 40 
  | CSTSTRING _ -> 41 
  | NAME _ -> 42 
  | CSTINT _ -> 43 
  | CSTBOOL _ -> 44 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_SEQOR 
  | 13 -> TOKEN_SEQAND 
  | 14 -> TOKEN_EQ 
  | 15 -> TOKEN_NE 
  | 16 -> TOKEN_GT 
  | 17 -> TOKEN_LT 
  | 18 -> TOKEN_GE 
  | 19 -> TOKEN_LE 
  | 20 -> TOKEN_PLUS 
  | 21 -> TOKEN_MINUS 
  | 22 -> TOKEN_TIMES 
  | 23 -> TOKEN_DIV 
  | 24 -> TOKEN_MOD 
  | 25 -> TOKEN_AND 
  | 26 -> TOKEN_OR 
  | 27 -> TOKEN_XOR 
  | 28 -> TOKEN_CHAR 
  | 29 -> TOKEN_ELSE 
  | 30 -> TOKEN_IF 
  | 31 -> TOKEN_INT 
  | 32 -> TOKEN_NULL 
  | 33 -> TOKEN_PRINT 
  | 34 -> TOKEN_PRINTLN 
  | 35 -> TOKEN_RETURN 
  | 36 -> TOKEN_VOID 
  | 37 -> TOKEN_WHILE 
  | 38 -> TOKEN_FOR 
  | 39 -> TOKEN_UNTIL 
  | 40 -> TOKEN_DO 
  | 41 -> TOKEN_CSTSTRING 
  | 42 -> TOKEN_NAME 
  | 43 -> TOKEN_CSTINT 
  | 44 -> TOKEN_CSTBOOL 
  | 47 -> TOKEN_end_of_input
  | 45 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtU 
    | 34 -> NONTERM_StmtU 
    | 35 -> NONTERM_StmtU 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_Expr 
    | 40 -> NONTERM_Expr 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_AtExprNotAccess 
    | 64 -> NONTERM_AtExprNotAccess 
    | 65 -> NONTERM_AtExprNotAccess 
    | 66 -> NONTERM_Access 
    | 67 -> NONTERM_Access 
    | 68 -> NONTERM_Access 
    | 69 -> NONTERM_Access 
    | 70 -> NONTERM_Access 
    | 71 -> NONTERM_Exprs 
    | 72 -> NONTERM_Exprs 
    | 73 -> NONTERM_Exprs1 
    | 74 -> NONTERM_Exprs1 
    | 75 -> NONTERM_Const 
    | 76 -> NONTERM_Const 
    | 77 -> NONTERM_Const 
    | 78 -> NONTERM_Const 
    | 79 -> NONTERM_Type 
    | 80 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 47 
let _fsyacc_tagOfErrorTerminal = 45

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | XOR  -> "XOR" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | UNTIL  -> "UNTIL" 
  | DO  -> "DO" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | XOR  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 15us; 65535us; 27us; 28us; 31us; 32us; 37us; 54us; 40us; 54us; 43us; 54us; 61us; 54us; 62us; 54us; 64us; 54us; 65us; 54us; 73us; 54us; 74us; 54us; 90us; 54us; 91us; 54us; 94us; 54us; 95us; 54us; 3us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 4us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 62us; 108us; 13us; 65535us; 37us; 45us; 40us; 45us; 43us; 45us; 61us; 63us; 62us; 46us; 64us; 66us; 65us; 66us; 73us; 75us; 74us; 75us; 90us; 92us; 91us; 93us; 94us; 96us; 95us; 96us; 7us; 65535us; 37us; 47us; 40us; 47us; 43us; 47us; 62us; 47us; 65us; 107us; 74us; 109us; 95us; 110us; 51us; 65535us; 37us; 48us; 40us; 48us; 43us; 48us; 50us; 52us; 57us; 60us; 58us; 59us; 61us; 48us; 62us; 48us; 64us; 48us; 65us; 48us; 69us; 72us; 70us; 71us; 73us; 48us; 74us; 48us; 78us; 81us; 79us; 80us; 82us; 85us; 83us; 84us; 86us; 89us; 87us; 88us; 90us; 48us; 91us; 48us; 94us; 48us; 95us; 48us; 98us; 99us; 103us; 104us; 112us; 113us; 117us; 118us; 126us; 127us; 129us; 155us; 132us; 133us; 134us; 135us; 156us; 137us; 157us; 138us; 158us; 139us; 159us; 140us; 160us; 141us; 161us; 142us; 162us; 143us; 163us; 144us; 164us; 145us; 165us; 146us; 166us; 147us; 167us; 148us; 168us; 149us; 169us; 150us; 170us; 151us; 171us; 153us; 173us; 152us; 184us; 154us; 187us; 155us; 51us; 65535us; 37us; 123us; 40us; 123us; 43us; 123us; 50us; 123us; 57us; 123us; 58us; 123us; 61us; 123us; 62us; 123us; 64us; 123us; 65us; 123us; 69us; 123us; 70us; 123us; 73us; 123us; 74us; 123us; 78us; 123us; 79us; 123us; 82us; 123us; 83us; 123us; 86us; 123us; 87us; 123us; 90us; 123us; 91us; 123us; 94us; 123us; 95us; 123us; 98us; 123us; 103us; 123us; 112us; 123us; 117us; 123us; 126us; 123us; 129us; 123us; 132us; 123us; 134us; 123us; 156us; 123us; 157us; 123us; 158us; 123us; 159us; 123us; 160us; 123us; 161us; 123us; 162us; 123us; 163us; 123us; 164us; 123us; 165us; 123us; 166us; 123us; 167us; 123us; 168us; 123us; 169us; 123us; 170us; 123us; 171us; 123us; 173us; 124us; 184us; 123us; 187us; 123us; 52us; 65535us; 37us; 125us; 40us; 125us; 43us; 125us; 50us; 125us; 57us; 125us; 58us; 125us; 61us; 125us; 62us; 125us; 64us; 125us; 65us; 125us; 69us; 125us; 70us; 125us; 73us; 125us; 74us; 125us; 78us; 125us; 79us; 125us; 82us; 125us; 83us; 125us; 86us; 125us; 87us; 125us; 90us; 125us; 91us; 125us; 94us; 125us; 95us; 125us; 98us; 125us; 103us; 125us; 112us; 125us; 117us; 125us; 126us; 125us; 129us; 125us; 132us; 125us; 134us; 125us; 156us; 125us; 157us; 125us; 158us; 125us; 159us; 125us; 160us; 125us; 161us; 125us; 162us; 125us; 163us; 125us; 164us; 125us; 165us; 125us; 166us; 125us; 167us; 125us; 168us; 125us; 169us; 125us; 170us; 125us; 171us; 125us; 173us; 125us; 181us; 183us; 184us; 125us; 187us; 125us; 54us; 65535us; 37us; 122us; 40us; 122us; 43us; 122us; 50us; 122us; 57us; 122us; 58us; 122us; 61us; 122us; 62us; 122us; 64us; 122us; 65us; 122us; 69us; 122us; 70us; 122us; 73us; 122us; 74us; 122us; 78us; 122us; 79us; 122us; 82us; 122us; 83us; 122us; 86us; 122us; 87us; 122us; 90us; 122us; 91us; 122us; 94us; 122us; 95us; 122us; 98us; 122us; 103us; 122us; 112us; 122us; 117us; 122us; 126us; 122us; 129us; 122us; 132us; 122us; 134us; 122us; 156us; 122us; 157us; 122us; 158us; 122us; 159us; 122us; 160us; 122us; 161us; 122us; 162us; 122us; 163us; 122us; 164us; 122us; 165us; 122us; 166us; 122us; 167us; 122us; 168us; 122us; 169us; 122us; 170us; 122us; 171us; 122us; 173us; 121us; 175us; 176us; 178us; 179us; 181us; 182us; 184us; 122us; 187us; 122us; 1us; 65535us; 129us; 130us; 2us; 65535us; 129us; 186us; 187us; 188us; 52us; 65535us; 37us; 172us; 40us; 172us; 43us; 172us; 50us; 172us; 57us; 172us; 58us; 172us; 61us; 172us; 62us; 172us; 64us; 172us; 65us; 172us; 69us; 172us; 70us; 172us; 73us; 172us; 74us; 172us; 78us; 172us; 79us; 172us; 82us; 172us; 83us; 172us; 86us; 172us; 87us; 172us; 90us; 172us; 91us; 172us; 94us; 172us; 95us; 172us; 98us; 172us; 103us; 172us; 112us; 172us; 117us; 172us; 126us; 172us; 129us; 172us; 132us; 172us; 134us; 172us; 156us; 172us; 157us; 172us; 158us; 172us; 159us; 172us; 160us; 172us; 161us; 172us; 162us; 172us; 163us; 172us; 164us; 172us; 165us; 172us; 166us; 172us; 167us; 172us; 168us; 172us; 169us; 172us; 170us; 172us; 171us; 172us; 173us; 172us; 181us; 172us; 184us; 172us; 187us; 172us; 8us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 23us; 26us; 29us; 33us; 49us; 53us; 58us; 72us; 80us; 132us; 184us; 237us; 292us; 294us; 297us; 350us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 28us; 33us; 1us; 23us; 17us; 24us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 17us; 26us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 26us; 1us; 27us; 1us; 28us; 3us; 28us; 33us; 34us; 1us; 28us; 3us; 28us; 33us; 34us; 19us; 28us; 33us; 34us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 28us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 28us; 3us; 28us; 33us; 34us; 1us; 28us; 1us; 28us; 2us; 28us; 33us; 1us; 28us; 1us; 29us; 2us; 29us; 35us; 1us; 29us; 2us; 29us; 35us; 18us; 29us; 35us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 29us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 29us; 2us; 29us; 35us; 1us; 29us; 1us; 30us; 2us; 30us; 36us; 1us; 30us; 2us; 30us; 36us; 18us; 30us; 36us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 30us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 30us; 2us; 30us; 36us; 18us; 30us; 36us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 30us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 30us; 2us; 30us; 36us; 18us; 30us; 36us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 30us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 30us; 2us; 30us; 36us; 1us; 30us; 2us; 30us; 36us; 2us; 31us; 32us; 4us; 31us; 32us; 37us; 38us; 2us; 31us; 32us; 1us; 31us; 1us; 31us; 17us; 31us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 32us; 17us; 32us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 32us; 1us; 32us; 1us; 33us; 1us; 34us; 1us; 35us; 2us; 37us; 38us; 1us; 37us; 1us; 37us; 17us; 37us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 37us; 1us; 37us; 1us; 38us; 1us; 38us; 17us; 38us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 38us; 1us; 38us; 4us; 39us; 42us; 67us; 70us; 3us; 39us; 42us; 70us; 1us; 40us; 2us; 40us; 64us; 1us; 41us; 1us; 42us; 17us; 42us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 2us; 43us; 66us; 1us; 43us; 1us; 43us; 1us; 43us; 1us; 44us; 17us; 44us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 45us; 17us; 45us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 46us; 17us; 47us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 47us; 48us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 47us; 48us; 49us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 47us; 48us; 49us; 50us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 47us; 48us; 49us; 50us; 51us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 47us; 48us; 49us; 50us; 51us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 17us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 17us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 17us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 16us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 17us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 17us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 70us; 18us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 73us; 74us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 2us; 64us; 67us; 1us; 64us; 1us; 65us; 2us; 65us; 70us; 1us; 66us; 1us; 67us; 2us; 67us; 70us; 1us; 67us; 2us; 68us; 69us; 2us; 68us; 70us; 1us; 69us; 1us; 70us; 1us; 70us; 1us; 72us; 1us; 74us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 77us; 1us; 77us; 1us; 78us; 1us; 79us; 1us; 80us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 106us; 108us; 126us; 128us; 131us; 133us; 151us; 153us; 155us; 157us; 161us; 163us; 167us; 187us; 205us; 207us; 211us; 213us; 215us; 218us; 220us; 222us; 225us; 227us; 230us; 249us; 267us; 269us; 272us; 274us; 276us; 279us; 281us; 284us; 303us; 321us; 323us; 326us; 345us; 363us; 365us; 368us; 387us; 405us; 407us; 410us; 412us; 415us; 418us; 423us; 426us; 428us; 430us; 448us; 450us; 452us; 454us; 456us; 474us; 476us; 478us; 480us; 482us; 484us; 487us; 489us; 491us; 509us; 511us; 513us; 515us; 517us; 535us; 537us; 539us; 544us; 548us; 550us; 553us; 555us; 557us; 575us; 578us; 580us; 582us; 584us; 586us; 604us; 606us; 624us; 626us; 644us; 662us; 680us; 698us; 716us; 734us; 752us; 770us; 788us; 806us; 824us; 842us; 860us; 878us; 896us; 913us; 931us; 949us; 968us; 970us; 972us; 974us; 976us; 978us; 980us; 982us; 984us; 986us; 988us; 990us; 992us; 994us; 996us; 998us; 1000us; 1002us; 1005us; 1007us; 1009us; 1012us; 1014us; 1016us; 1019us; 1021us; 1024us; 1027us; 1029us; 1031us; 1033us; 1035us; 1037us; 1039us; 1041us; 1043us; 1045us; 1047us; 1049us; 1051us; |]
let _fsyacc_action_rows = 196
let _fsyacc_actionTableElements = [|3us; 16386us; 28us; 195us; 31us; 194us; 36us; 23us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 3us; 16386us; 28us; 195us; 31us; 194us; 36us; 23us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 1us; 16us; 22us; 14us; 42us; 12us; 3us; 32768us; 1us; 16us; 22us; 14us; 42us; 13us; 1us; 16390us; 5us; 19us; 0us; 16391us; 1us; 16391us; 1us; 29us; 3us; 32768us; 1us; 16us; 22us; 14us; 42us; 12us; 1us; 16392us; 5us; 19us; 3us; 32768us; 1us; 16us; 22us; 14us; 42us; 12us; 2us; 32768us; 2us; 18us; 5us; 19us; 0us; 16393us; 2us; 32768us; 6us; 20us; 43us; 21us; 0us; 16394us; 1us; 32768us; 6us; 22us; 0us; 16395us; 1us; 32768us; 42us; 24us; 1us; 32768us; 1us; 25us; 2us; 16398us; 28us; 195us; 31us; 194us; 1us; 32768us; 2us; 27us; 1us; 32768us; 3us; 37us; 0us; 16396us; 2us; 16398us; 28us; 195us; 31us; 194us; 1us; 32768us; 2us; 31us; 1us; 32768us; 3us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 8us; 35us; 2us; 32768us; 28us; 195us; 31us; 194us; 0us; 16401us; 19us; 16403us; 1us; 173us; 3us; 37us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 28us; 195us; 30us; 56us; 31us; 194us; 32us; 193us; 33us; 134us; 34us; 136us; 35us; 50us; 37us; 68us; 38us; 77us; 40us; 95us; 42us; 128us; 43us; 189us; 44us; 190us; 1us; 32768us; 4us; 39us; 0us; 16402us; 19us; 16403us; 1us; 173us; 3us; 37us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 28us; 195us; 30us; 56us; 31us; 194us; 32us; 193us; 33us; 134us; 34us; 136us; 35us; 50us; 37us; 68us; 38us; 77us; 40us; 95us; 42us; 128us; 43us; 189us; 44us; 190us; 0us; 16404us; 1us; 32768us; 7us; 43us; 19us; 16403us; 1us; 173us; 3us; 37us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 28us; 195us; 30us; 56us; 31us; 194us; 32us; 193us; 33us; 134us; 34us; 136us; 35us; 50us; 37us; 68us; 38us; 77us; 40us; 95us; 42us; 128us; 43us; 189us; 44us; 190us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 29us; 65us; 0us; 16407us; 17us; 32768us; 7us; 49us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 0us; 16408us; 12us; 32768us; 1us; 173us; 7us; 51us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 0us; 16409us; 17us; 32768us; 7us; 53us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 1us; 57us; 1us; 32768us; 1us; 58us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 17us; 32768us; 2us; 62us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 17us; 32768us; 2us; 61us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 17us; 32768us; 1us; 173us; 3us; 37us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 30us; 55us; 32us; 193us; 33us; 134us; 34us; 136us; 35us; 50us; 37us; 67us; 38us; 76us; 40us; 94us; 42us; 128us; 43us; 189us; 44us; 190us; 17us; 32768us; 1us; 173us; 3us; 37us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 30us; 56us; 32us; 193us; 33us; 134us; 34us; 136us; 35us; 50us; 37us; 68us; 38us; 77us; 40us; 95us; 42us; 128us; 43us; 189us; 44us; 190us; 1us; 32768us; 29us; 64us; 17us; 32768us; 1us; 173us; 3us; 37us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 30us; 55us; 32us; 193us; 33us; 134us; 34us; 136us; 35us; 50us; 37us; 67us; 38us; 76us; 40us; 94us; 42us; 128us; 43us; 189us; 44us; 190us; 17us; 32768us; 1us; 173us; 3us; 37us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 30us; 56us; 32us; 193us; 33us; 134us; 34us; 136us; 35us; 50us; 37us; 68us; 38us; 77us; 40us; 95us; 42us; 128us; 43us; 189us; 44us; 190us; 0us; 16412us; 1us; 32768us; 1us; 69us; 1us; 32768us; 1us; 70us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 17us; 32768us; 2us; 74us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 17us; 32768us; 2us; 73us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 17us; 32768us; 1us; 173us; 3us; 37us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 30us; 55us; 32us; 193us; 33us; 134us; 34us; 136us; 35us; 50us; 37us; 67us; 38us; 76us; 40us; 94us; 42us; 128us; 43us; 189us; 44us; 190us; 17us; 32768us; 1us; 173us; 3us; 37us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 30us; 56us; 32us; 193us; 33us; 134us; 34us; 136us; 35us; 50us; 37us; 68us; 38us; 77us; 40us; 95us; 42us; 128us; 43us; 189us; 44us; 190us; 0us; 16413us; 1us; 32768us; 1us; 78us; 1us; 32768us; 1us; 79us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 17us; 32768us; 7us; 83us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 17us; 32768us; 7us; 82us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 17us; 32768us; 7us; 87us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 17us; 32768us; 7us; 86us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 17us; 32768us; 2us; 91us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 17us; 32768us; 2us; 90us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 17us; 32768us; 1us; 173us; 3us; 37us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 30us; 55us; 32us; 193us; 33us; 134us; 34us; 136us; 35us; 50us; 37us; 67us; 38us; 76us; 40us; 94us; 42us; 128us; 43us; 189us; 44us; 190us; 17us; 32768us; 1us; 173us; 3us; 37us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 30us; 55us; 32us; 193us; 33us; 134us; 34us; 136us; 35us; 50us; 37us; 67us; 38us; 76us; 40us; 94us; 42us; 128us; 43us; 189us; 44us; 190us; 0us; 16414us; 0us; 16414us; 17us; 32768us; 1us; 173us; 3us; 37us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 30us; 55us; 32us; 193us; 33us; 134us; 34us; 136us; 35us; 50us; 37us; 67us; 38us; 76us; 40us; 94us; 42us; 128us; 43us; 189us; 44us; 190us; 17us; 32768us; 1us; 173us; 3us; 37us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 30us; 56us; 32us; 193us; 33us; 134us; 34us; 136us; 35us; 50us; 37us; 68us; 38us; 77us; 40us; 95us; 42us; 128us; 43us; 189us; 44us; 190us; 2us; 32768us; 37us; 97us; 39us; 102us; 1us; 32768us; 1us; 98us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 17us; 32768us; 2us; 100us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 1us; 32768us; 7us; 101us; 0us; 16415us; 1us; 32768us; 1us; 103us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 17us; 32768us; 2us; 105us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 1us; 32768us; 7us; 106us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 0us; 16419us; 2us; 32768us; 37us; 111us; 39us; 116us; 1us; 32768us; 1us; 112us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 17us; 32768us; 2us; 114us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 1us; 32768us; 7us; 115us; 0us; 16421us; 1us; 32768us; 1us; 117us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 17us; 32768us; 2us; 119us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 1us; 32768us; 7us; 120us; 0us; 16422us; 3us; 16423us; 2us; 180us; 5us; 184us; 9us; 126us; 2us; 16423us; 5us; 184us; 9us; 126us; 0us; 16424us; 1us; 16424us; 2us; 174us; 0us; 16425us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 16us; 16426us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 1us; 16450us; 1us; 129us; 11us; 16455us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 1us; 32768us; 2us; 131us; 0us; 16427us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 0us; 16428us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 16us; 16429us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 0us; 16430us; 3us; 16431us; 22us; 158us; 23us; 159us; 24us; 163us; 3us; 16432us; 22us; 158us; 23us; 159us; 24us; 163us; 0us; 16433us; 0us; 16434us; 9us; 16435us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 9us; 16436us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 9us; 16437us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 0us; 16438us; 9us; 16439us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 9us; 16440us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 9us; 16441us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 9us; 16442us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 9us; 16443us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 9us; 16444us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 14us; 16445us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 16us; 32768us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 15us; 16446us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 17us; 32768us; 6us; 185us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 17us; 16457us; 8us; 187us; 12us; 171us; 13us; 170us; 14us; 164us; 15us; 165us; 16us; 166us; 17us; 167us; 18us; 168us; 19us; 169us; 20us; 156us; 21us; 157us; 22us; 158us; 23us; 159us; 24us; 163us; 25us; 160us; 26us; 161us; 27us; 162us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 0us; 16447us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 0us; 16448us; 3us; 32768us; 1us; 178us; 22us; 181us; 42us; 177us; 1us; 16449us; 5us; 184us; 0us; 16450us; 3us; 32768us; 1us; 178us; 22us; 181us; 42us; 177us; 2us; 32768us; 2us; 180us; 5us; 184us; 0us; 16451us; 8us; 32768us; 1us; 173us; 10us; 175us; 21us; 191us; 22us; 181us; 32us; 193us; 42us; 177us; 43us; 189us; 44us; 190us; 1us; 16452us; 5us; 184us; 0us; 16453us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 0us; 16454us; 0us; 16456us; 11us; 32768us; 1us; 173us; 10us; 175us; 11us; 132us; 21us; 191us; 22us; 181us; 32us; 193us; 33us; 134us; 34us; 136us; 42us; 128us; 43us; 189us; 44us; 190us; 0us; 16458us; 0us; 16459us; 0us; 16460us; 1us; 32768us; 43us; 192us; 0us; 16461us; 0us; 16462us; 0us; 16463us; 0us; 16464us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 4us; 5us; 7us; 8us; 12us; 13us; 15us; 16us; 17us; 21us; 25us; 27us; 28us; 30us; 34us; 36us; 40us; 43us; 44us; 47us; 48us; 50us; 51us; 53us; 55us; 58us; 60us; 62us; 63us; 66us; 68us; 70us; 71us; 72us; 74us; 77us; 78us; 98us; 100us; 101us; 121us; 122us; 124us; 144us; 145us; 146us; 148us; 149us; 167us; 168us; 181us; 182us; 200us; 201us; 202us; 204us; 206us; 218us; 230us; 248us; 266us; 284us; 302us; 304us; 322us; 340us; 341us; 343us; 345us; 357us; 369us; 387us; 405us; 423us; 441us; 442us; 444us; 446us; 458us; 470us; 488us; 506us; 518us; 530us; 548us; 566us; 578us; 590us; 608us; 626us; 644us; 662us; 663us; 664us; 682us; 700us; 703us; 705us; 717us; 735us; 737us; 738us; 740us; 752us; 770us; 772us; 773us; 774us; 775us; 776us; 779us; 781us; 793us; 811us; 813us; 814us; 816us; 828us; 846us; 848us; 849us; 853us; 856us; 857us; 859us; 860us; 872us; 889us; 891us; 903us; 905us; 906us; 918us; 919us; 931us; 948us; 949us; 953us; 957us; 958us; 959us; 969us; 979us; 989us; 990us; 1000us; 1010us; 1020us; 1030us; 1040us; 1050us; 1065us; 1082us; 1098us; 1116us; 1134us; 1146us; 1158us; 1170us; 1182us; 1194us; 1206us; 1218us; 1230us; 1242us; 1254us; 1266us; 1278us; 1290us; 1302us; 1314us; 1326us; 1327us; 1339us; 1340us; 1344us; 1346us; 1347us; 1351us; 1354us; 1355us; 1364us; 1366us; 1367us; 1379us; 1380us; 1381us; 1393us; 1394us; 1395us; 1396us; 1398us; 1399us; 1400us; 1401us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 9us; 7us; 7us; 7us; 5us; 5us; 9us; 7us; 7us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 20us; 21us; 21us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 16416us; 16417us; 16418us; 16419us; 65535us; 65535us; 65535us; 65535us; 65535us; 16421us; 65535us; 65535us; 65535us; 65535us; 16422us; 65535us; 65535us; 16424us; 65535us; 16425us; 65535us; 65535us; 65535us; 65535us; 65535us; 16427us; 65535us; 65535us; 65535us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16447us; 65535us; 16448us; 65535us; 65535us; 16450us; 65535us; 65535us; 16451us; 65535us; 65535us; 16453us; 65535us; 16454us; 16456us; 65535us; 16458us; 16459us; 16460us; 65535us; 16461us; 16462us; 16463us; 16464us; |]
let _fsyacc_reductions ()  =    [| 
# 442 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 451 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 44 "CPar.fsy"
                                                               Prog _1 
                   )
# 44 "CPar.fsy"
                 : Absyn.program));
# 462 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "CPar.fsy"
                                                               [] 
                   )
# 49 "CPar.fsy"
                 : 'gentype_Topdecs));
# 472 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 50 "CPar.fsy"
                 : 'gentype_Topdecs));
# 484 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 54 "CPar.fsy"
                 : 'gentype_Topdec));
# 495 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "CPar.fsy"
                                                               _1 
                   )
# 55 "CPar.fsy"
                 : 'gentype_Topdec));
# 506 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 73 "CPar.fsy"
                 : 'gentype_Vardec));
# 518 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 84 "CPar.fsy"
                 : 'gentype_Vardesc));
# 529 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 92 "CPar.fsy"
                 : 'gentype_Vardesc));
# 540 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "CPar.fsy"
                                                               _2                                      
                   )
# 94 "CPar.fsy"
                 : 'gentype_Vardesc));
# 551 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 96 "CPar.fsy"
                 : 'gentype_Vardesc));
# 562 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 98 "CPar.fsy"
                 : 'gentype_Vardesc));
# 574 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 103 "CPar.fsy"
                 : 'gentype_Fundec));
# 587 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 105 "CPar.fsy"
                 : 'gentype_Fundec));
# 601 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "CPar.fsy"
                                                               [] 
                   )
# 110 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 611 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "CPar.fsy"
                                                               _1 
                   )
# 111 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 622 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "CPar.fsy"
                                                               [_1]     
                   )
# 115 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 633 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 116 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 645 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "CPar.fsy"
                                                               Block _2 
                   )
# 121 "CPar.fsy"
                 : 'gentype_Block));
# 656 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               [] 
                   )
# 125 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 666 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 126 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 678 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 127 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 690 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "CPar.fsy"
                                                               _1 
                   )
# 131 "CPar.fsy"
                 : 'gentype_Stmt));
# 701 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "CPar.fsy"
                                                               _1 
                   )
# 132 "CPar.fsy"
                 : 'gentype_Stmt));
# 712 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 136 "CPar.fsy"
                 : 'gentype_StmtM));
# 723 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               Return None          
                   )
# 137 "CPar.fsy"
                 : 'gentype_StmtM));
# 733 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 138 "CPar.fsy"
                 : 'gentype_StmtM));
# 744 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               _1                   
                   )
# 139 "CPar.fsy"
                 : 'gentype_StmtM));
# 755 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 140 "CPar.fsy"
                 : 'gentype_StmtM));
# 768 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtM));
# 780 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                                         For(_3, _5, _7, _9)  
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtM));
# 794 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 143 "CPar.fsy"
                 : 'gentype_StmtM));
# 806 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               DoUntil(_2, _5)      
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtM));
# 818 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtU));
# 831 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtU));
# 843 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtU));
# 855 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                                         For(_3, _5, _7, _9)  
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtU));
# 869 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtU in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtU));
# 881 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtU in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               DoUntil(_2, _5)      
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtU));
# 893 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               Access _1           
                   )
# 159 "CPar.fsy"
                 : 'gentype_Expr));
# 904 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               _1                  
                   )
# 160 "CPar.fsy"
                 : 'gentype_Expr));
# 915 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               _1                  
                   )
# 164 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 926 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 165 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 938 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 166 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 950 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 167 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 961 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 168 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 972 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 169 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 982 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 170 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 994 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1006 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1018 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1030 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Prim2("&",  _1, _3) 
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1042 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Prim2("|",  _1, _3) 
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1054 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Prim2("^",  _1, _3) 
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1066 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1078 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1090 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1102 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1114 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1126 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1138 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1150 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1162 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1174 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               CstI _1             
                   )
# 193 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1185 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               _2                  
                   )
# 194 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1196 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Addr _2             
                   )
# 195 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1207 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               AccVar _1           
                   )
# 199 "CPar.fsy"
                 : 'gentype_Access));
# 1218 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               _2                  
                   )
# 200 "CPar.fsy"
                 : 'gentype_Access));
# 1229 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 201 "CPar.fsy"
                 : 'gentype_Access));
# 1240 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 202 "CPar.fsy"
                 : 'gentype_Access));
# 1251 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 203 "CPar.fsy"
                 : 'gentype_Access));
# 1263 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               []       
                   )
# 207 "CPar.fsy"
                 : 'gentype_Exprs));
# 1273 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               _1       
                   )
# 208 "CPar.fsy"
                 : 'gentype_Exprs));
# 1284 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               [_1]     
                   )
# 212 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1295 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 213 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1307 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               _1       
                   )
# 217 "CPar.fsy"
                 : 'gentype_Const));
# 1318 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               _1       
                   )
# 218 "CPar.fsy"
                 : 'gentype_Const));
# 1329 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               - _2     
                   )
# 219 "CPar.fsy"
                 : 'gentype_Const));
# 1340 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               -1       
                   )
# 220 "CPar.fsy"
                 : 'gentype_Const));
# 1350 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               TypI     
                   )
# 224 "CPar.fsy"
                 : 'gentype_Type));
# 1360 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "CPar.fsy"
                                                               TypC     
                   )
# 225 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1371 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 48;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
